//
// Base Styles
// --------------------------------------------------

// Resets
// -------------------------

// Meyer Style Resets on Elements that
// bring a lot of styling
pre,
code,
sub,
sup,
fieldset,
form,
label,
legend,
details,
embed,
menu,
summary,
table,
tbody,
tfoot,
thead,
tr,
th,
td {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

// Remove base padding, margin, and font style
// from elements who bring their own
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
figure,
ol,
ul,
caption,
dl,
dt,
dd,
ol,
ul,
li {
  margin: 0;
  padding: 0;
  font: inherit;
}


// Normalize Patches
// -------------------------

// remove quotes from blockquote
blockquote,
q {
  quotes: none;

  &:before,
  &:after {
    content: "";
    content: none;
  }
}

// everything border box
html {
  box-sizing: border-box;
}

*,
*:before,
*:after {
  @include prefix((box-sizing: inherit), moz)
}

// Responsive Images
img { max-width: 100%; height: auto; }


// no border on iframes
iframe { border: 0; }


// Ensure we only define type using our default classes.
small {
  font-size: $base-font-size;
}

sub,
sup {
  font-size: $base-font-size;
}


// Switching from ems to rems for consistency and our own sanity.
sup {
  top: (-$space-1);
}

sub {
  bottom: -.25rem;
}


code,
kbd,
pre,
samp {
  font-size: $base-font-size;
}


// We should define fieldset with classes if we're going to define it.
fieldset {
  border: 0;
  margin: 0;
  padding: 0;
}


// Making sure that bold is 600, since we use semibold instead.
optgroup {
  font-weight: $bold;
}

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: "";
  content: none;
}

// Overriding default iOS input style
input {
  -webkit-appearance: none;
  border-radius: 0;
}

input[type="checkbox"] {
  -webkit-appearance: checkbox;
  position: absolute; // take it out of document flow
  opacity: 0; // hide it
  transition: all 0.15s ease;

  & + label {
    position: relative;
    cursor: pointer;
    padding: 0;
    vertical-align: bottom;
    user-select: none;
    transition: all 0.15s ease-in-out;
  }

  & + label:before {
    content: '';
    margin-right: 10px;
    display: inline-block;
    vertical-align: text-top;
    width: 20px;
    height: 20px;
    background: #fff;
    border: solid 1px #dcdcdc;
    border-radius: 3px;
    transition: all 0.15s ease-in-out;
  }

  &:hover + label:before {
    border: 1px solid #008dc8;
    // box-shadow: 0 0 0 6px rgba(0,0,0,0.12);
  }

  &:checked + label:before {
    background: #008dc8;
  }

  // Disabled state
  &.disabled,
  &[disabled] {
    pointer-events: none;
  }
  &.disabled + label,
  &[disabled] + label {
    color: #b8b8b8;
    cursor: not-allowed;
    pointer-events: none;
g  }
  &.disabled + label:before,
  &[disabled] + label:before {
    box-shadow: none;
    background: #ddd;
    cursor: not-allowed;
    pointer-events: none;
  }

  // Checkmark. Could be replaced with an image
  &:checked + label:after {
    content: '';
    position: absolute;
    left: 5px;
    top: 5px;
    background: #fff;
    width: 3px;
    height: 3px;
    box-shadow:
      2px 0 0 #fff,
      4px 0 0 #fff,
      4px -2px 0 #fff,
      4px -4px 0 #fff,
      4px -6px 0 #fff,
      4px -7px 0 #fff;
    transform: rotate(45deg);
  }
}
